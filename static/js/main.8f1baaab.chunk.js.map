{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","seteoCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cates","type","value","onChange","target","proTypes","PropTypes","func","isRequired","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","categoria","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,eAGzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAG7BR,GAAe,SAAAS,GAAK,MAAE,CAACP,MACtBC,EAAc,MAId,SACC,uBAAOO,KAAK,OACXC,MAAOT,EACPU,SAlBmB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,aAyB/BZ,EAAYe,SAAW,CACnBd,eAAgBe,IAAUC,KAAKC,Y,WChCtBC,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,IAC/B,OACI,sBAAKC,UAAY,2DAAjB,UACI,qBAAKC,IAAKF,EAAKG,IAAMJ,IACrB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,8DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAabY,GAba,4CAAH,sDCIPM,EAAS,SAAC,GAAc,IAAbb,EAAY,EAAZA,SAIpB,ECLwB,SAACc,GAEzB,MAA0BtC,mBAAS,CAC/B8B,KAAK,GACLS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OAnBAC,qBAAW,WAEPnB,EAAQe,GACPK,MAAO,SAAAV,GAEJW,YAAW,WACPH,EAAS,CACLX,KAAMG,EACNM,SAAS,MAEd,UAOT,CAACD,IAEIE,EDtBiBK,CAAarB,GAA9BM,EAAP,EAAOA,KAAMS,EAAb,EAAaA,QACb,OACI,qCACA,oBAAInB,UAAY,oCAAhB,SAAqDI,IACpDe,GAAW,mBAAGnB,UAAY,mCAAf,uBACZ,qBAAKA,UAAY,YAAjB,SAGQU,EAAKE,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADCH,EAAKI,aEXbY,EAAe,WAExB,MAAoC9C,mBAAS,CAAC,WAA9C,mBAAO+C,EAAP,KAAmBC,EAAnB,KAOA,OACC,qCACG,8CACA,cAAC,EAAD,CAAajD,eAAkBiD,IAC/B,uBACA,6BAEYD,EAAWf,KAAI,SAAAM,GAAS,OAEpB,aADA,CACC,EAAD,CACId,SAAUc,GACHA,YCrBnCW,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8f1baaab.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({seteoCategoria}) =>{\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange =(e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if(inputValue.trim().length>2)\r\n        {\r\n       // seteoCategoria(cates=>[inputValue, ...cates ])\r\n       seteoCategoria(cates=>[inputValue])\r\n        setInputValue('');\r\n        }\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n         <input type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          \r\n         />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.proTypes = {\r\n    seteoCategoria: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url})=>{\r\n    return(\r\n        <div className = \"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={url} alt ={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","export const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=2&api_key=M9z4WQgbefoUVWh8KppIP3Vpfm4fmgLO`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map((img) =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n    \r\n}","import React from 'react'\r\nimport {GifGridItem} from './GifGridItem';\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\n\r\nexport const GifGrid =({category})=>{\r\n    //Para que el componente no se renderice mas de una vez\r\n    //independiente de que otro componente en el mismo bloque cambie(contador)\r\n    //const [contador, setstate] = useState(0)    \r\n    const {data, loading} = useFetchGifs(category);\r\n    return(\r\n        <>\r\n        <h3 className = \"animate__animated animate__fadein\">{category}</h3>\r\n        {loading && <p className = \"animate__animated animate__flash\">Loading..</p>}\r\n        <div className = \"card-grid\">\r\n            \r\n            {\r\n                data.map(img=>(\r\n                <GifGridItem \r\n                key={data.id}\r\n                {...img}  \r\n                />\r\n                ))                \r\n            }\r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (categoria) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n    \r\n    \r\n    useEffect (()=>{\r\n\r\n        getGifs(categoria)\r\n        .then ( img=>{\r\n\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            }, 3000);\r\n\r\n            \r\n\r\n        })\r\n        \r\n\r\n    },[categoria])\r\n\r\n    return state;\r\n    \r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Futbol' ]);\r\n\r\n   \r\n/*     const handleAdd = () => {\r\n        seteoCategories(categoriaspepe => [...categoriaspepe, 'LCDTM']);\r\n    } */\r\n\r\n    return(\r\n     <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory seteoCategoria = {setCategories} />\r\n        <hr />\r\n        <ol>\r\n            {\r\n                    categories.map(categoria =>\r\n                        //return \r\n                        <GifGrid \r\n                            category={categoria} \r\n                            key = {categoria}/>\r\n                    )\r\n            }\r\n        </ol>\r\n     </>   \r\n    )\r\n}\r\n\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}